{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/components/TargetDetails/profile.js\";\nimport React, { Component } from 'react';\nimport button from '@material-ui/core';\n\nvar TargetDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TargetDetails, _Component);\n\n  function TargetDetails() {\n    var _this;\n\n    _classCallCheck(this, TargetDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TargetDetails).call(this));\n\n    _this.DescriptionItem = function () {\n      var descriptionSolid = React.createElement(\"div\", {\n        className: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, _this.state.item));\n      var descriptionEditable = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: \"sample input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n\n      if (_this.showMe) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, descriptionSolid);\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, descriptionEditable);\n      }\n    };\n\n    _this.myDescription = function () {\n      return React.createElement(\"div\", {\n        className: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, _this.props.description));\n    };\n\n    _this.state = {\n      showMe: true,\n      item: 'Yooooo'\n    };\n    _this.toggleDescription = _this.toggleDescription.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TargetDetails, [{\n    key: \"toggleDescription\",\n    value: function toggleDescription() {\n      this.setState(function (state) {\n        return {\n          showMe: !state.showMe\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const TheDescriptionItem = this.DescriptionItem()\n      return React.createElement(\"div\", {\n        className: \"TargetDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.title)), React.createElement(\"div\", {\n        className: \"Thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"Card\",\n        src: this.props.thumbnail,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.toggleDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.showMe ? 'ON' : React.createElement(\"myDescription\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons prefix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"textsms\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Comment...\",\n        className: \"autocomplete\",\n        value: this.props.newComment,\n        onChange: this.props.handleCommentSubmitChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TargetDetails;\n}(Component);\n\nexport { TargetDetails as default };","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/components/TargetDetails/profile.js"],"names":["React","Component","button","TargetDetails","DescriptionItem","descriptionSolid","state","item","descriptionEditable","showMe","myDescription","props","description","toggleDescription","bind","setState","title","thumbnail","handleCommentSubmit","newComment","handleCommentSubmitChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport button from '@material-ui/core';\n\nexport default class TargetDetails extends Component {\n    constructor() {\n      super();\n      this.state = {\n        showMe : true,\n        item: 'Yooooo'\n      }\n      this.toggleDescription = this.toggleDescription.bind(this);\n\n    }\n\n\n   toggleDescription() {\n    this.setState(state => ({ \n      showMe: !state.showMe\n    }))\n   }\n\n    \n   DescriptionItem = () =>  {\n    const descriptionSolid = (\n      <div className=\"Description\"> \n          <p>{this.state.item}</p>\n          </div>\n    );\n    const descriptionEditable = (\n      <div>\n        \n        <input value=\"sample input\" />\n      </div>\n    );\n    \n      if(this.showMe){\n        return(\n          <div> \n          {descriptionSolid}\n          </div>\n        )}else{\n          return(\n            <div> \n            {descriptionEditable}\n\n            </div>\n          )\n        }\n      }\n      myDescription = () => (\n        <div className=\"Description\"> \n        <p>{this.props.description}</p>\n        </div>\n        )\n\n  render() {\n    // const TheDescriptionItem = this.DescriptionItem()\n      \n    \n      \n    \n\n    return (\n      <div className=\"TargetDetails\">  \n        <div> \n          <h3>{this.props.title}</h3>\n        </div>\n\n        <div className=\"Thumbnail\"> \n        <img className=\"Card\"  src={this.props.thumbnail} alt=\"\"/> \n        </div>\n       \n\n        <button onClick={this.toggleDescription}>\n        {this.state.showMe ? 'ON' : <myDescription/> }\n      </button>\n\n      <div className=\"Description\"> \n          {/* <p>{this.props.description}</p> */}\n          {/* {TheDescriptionItem} */}\n          </div>\n \n\n\n        <div className=\"input-field col s12\">\n          <form onSubmit={this.props.handleCommentSubmit}>\n          <i className=\"material-icons prefix\">textsms</i>\n          <input type=\"text\" placeholder=\"Comment...\" className=\"autocomplete\" value={this.props.newComment} onChange={this.props.handleCommentSubmitChange}/>\n          </form>\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}