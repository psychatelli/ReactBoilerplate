{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/components/TargetDetails/profile.js\";\nimport React, { Component } from 'react';\nimport button from '@material-ui/core';\n\nvar TargetDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TargetDetails, _Component);\n\n  function TargetDetails() {\n    var _this;\n\n    _classCallCheck(this, TargetDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TargetDetails).call(this));\n    _this.state = {\n      showMe: true\n    };\n    _this.toggleDescription = _this.toggleDescription.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TargetDetails, [{\n    key: \"toggleDescription\",\n    value: function toggleDescription() {\n      this.setState(function (state) {\n        return {\n          showMe: !state.isToggleOn\n        };\n      });\n    } //  DescriptionItem = () =>  {\n    //   const descriptionSolid = (\n    //     <div className=\"Description\"> \n    //         <p>{this.props.description}</p>\n    //         </div>\n    //   );\n    //   const descriptionEditable = (\n    //     <div>\n    //       <input value=\"sample input\" />\n    //     </div>\n    //   );\n    //     if(this.showMe){\n    //       return(\n    //         <div> \n    //         {descriptionSolid}\n    //         </div>\n    //       )}else{\n    //         return(\n    //           <div> \n    //           {descriptionEditable}\n    //           </div>\n    //         )\n    //       }\n    //     }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var TheDescriptionItem = this.DescriptionItem();\n      return React.createElement(\"div\", {\n        className: \"TargetDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.title)), React.createElement(\"div\", {\n        className: \"Thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"Card\",\n        src: this.props.thumbnail,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn\",\n        onClick: this.toggleDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" Toggle description\"), React.createElement(\"button\", {\n        onClick: this.toggleDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.isToggleOn ? 'ON' : 'OFF'), React.createElement(\"div\", {\n        className: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, TheDescriptionItem), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons prefix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"textsms\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Comment...\",\n        className: \"autocomplete\",\n        value: this.props.newComment,\n        onChange: this.props.handleCommentSubmitChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TargetDetails;\n}(Component);\n\nexport { TargetDetails as default };","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/components/TargetDetails/profile.js"],"names":["React","Component","button","TargetDetails","state","showMe","toggleDescription","bind","setState","isToggleOn","TheDescriptionItem","DescriptionItem","props","title","thumbnail","handleCommentSubmit","newComment","handleCommentSubmitChange"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IAEqBC,a;;;;;AACjB,2BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAG;AADE,KAAb;AAGA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AALY;AAOb;;;;wCAGkB;AACnB,WAAKC,QAAL,CAAc,UAAAJ,KAAK;AAAA,eAAK;AACtBC,UAAAA,MAAM,EAAE,CAACD,KAAK,CAACK;AADO,SAAL;AAAA,OAAnB;AAGA,K,CAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;6BAES;AACP,UAAMC,kBAAkB,GAAG,KAAKC,eAAL,EAA3B;AAKA,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAWC,KAAhB,CADF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAuB,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,SAAvC;AAAkD,QAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CALF,EASC;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAE,KAAKR,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATD,EAWE;AAAQ,QAAA,OAAO,EAAE,KAAKA,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKF,KAAL,CAAWK,UAAX,GAAwB,IAAxB,GAA+B,KADhC,CAXF,EAeA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKC,kBAFL,CAfA,EAsBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWG,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,YAA/B;AAA4C,QAAA,SAAS,EAAC,cAAtD;AAAqE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,UAAvF;AAAmG,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,yBAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF,CAtBF,CADF;AAiCD;;;;EArFwChB,S;;SAAtBE,a","sourcesContent":["import React, { Component } from 'react';\nimport button from '@material-ui/core';\n\nexport default class TargetDetails extends Component {\n    constructor() {\n      super();\n      this.state = {\n        showMe : true\n      }\n      this.toggleDescription = this.toggleDescription.bind(this);\n\n    }\n\n\n   toggleDescription() {\n    this.setState(state => ({ \n      showMe: !state.isToggleOn\n    }))\n   }\n\n    \n  //  DescriptionItem = () =>  {\n  //   const descriptionSolid = (\n  //     <div className=\"Description\"> \n  //         <p>{this.props.description}</p>\n  //         </div>\n  //   );\n  //   const descriptionEditable = (\n  //     <div>\n        \n  //       <input value=\"sample input\" />\n  //     </div>\n  //   );\n    \n  //     if(this.showMe){\n  //       return(\n  //         <div> \n  //         {descriptionSolid}\n  //         </div>\n  //       )}else{\n  //         return(\n  //           <div> \n  //           {descriptionEditable}\n\n  //           </div>\n  //         )\n  //       }\n  //     }\n\n  render() {\n    const TheDescriptionItem = this.DescriptionItem()\n   \n  \n    \n\n    return (\n      <div className=\"TargetDetails\">  \n        <div> \n          <h3>{this.props.title}</h3>\n        </div>\n\n        <div className=\"Thumbnail\"> \n        <img className=\"Card\"  src={this.props.thumbnail} alt=\"\"/> \n        </div>\n       \n       <button className=\"btn\" onClick={this.toggleDescription}> Toggle description</button>\n\n        <button onClick={this.toggleDescription}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n\n      <div className=\"Description\"> \n          {/* <p>{this.props.description}</p> */}\n          {TheDescriptionItem}\n          </div>\n \n\n\n        <div className=\"input-field col s12\">\n          <form onSubmit={this.props.handleCommentSubmit}>\n          <i className=\"material-icons prefix\">textsms</i>\n          <input type=\"text\" placeholder=\"Comment...\" className=\"autocomplete\" value={this.props.newComment} onChange={this.props.handleCommentSubmitChange}/>\n          </form>\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}