{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/components/TargetDetails/profile.js\";\nimport React, { Component } from 'react';\nimport Avatar from 'react-avatar';\n\nvar TargetDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TargetDetails, _Component);\n\n  function TargetDetails() {\n    var _this;\n\n    _classCallCheck(this, TargetDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TargetDetails).call(this));\n    _this.state = {\n      showMe: false\n    };\n    _this.toggleDescription = _this.toggleDescription.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TargetDetails, [{\n    key: \"toggleDescription\",\n    value: function toggleDescription() {\n      this.setState(function (state) {\n        return {\n          showMe: !state.isToggleOn\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      DescriptionItem = function DescriptionItem() {\n        var descriptionSolid = React.createElement(\"div\", {\n          className: \"Description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, _this2.props.description));\n        var descriptionEditable = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          value: \"sample input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n\n        if (_this2.showMe) {\n          return {\n            descriptionSolid: descriptionSolid\n          };\n        } else {\n          React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, descriptionEditable);\n        }\n      };\n\n      return React.createElement(\"div\", {\n        className: \"TargetDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.title)), React.createElement(\"div\", {\n        className: \"Thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"Card\",\n        src: this.props.thumbnail,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        onClick: toggleDescription,\n        className: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, DescriptionItem), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons prefix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"textsms\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Comment...\",\n        className: \"autocomplete\",\n        value: this.props.newComment,\n        onChange: this.props.handleCommentSubmitChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TargetDetails;\n}(Component);\n\nexport { TargetDetails as default };","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/components/TargetDetails/profile.js"],"names":["React","Component","Avatar","TargetDetails","state","showMe","toggleDescription","bind","setState","isToggleOn","DescriptionItem","descriptionSolid","props","description","descriptionEditable","title","thumbnail","handleCommentSubmit","newComment","handleCommentSubmitChange"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEqBC,a;;;;;AACjB,2BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAG;AADE,KAAb;AAGA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AALY;AAOb;;;;wCAGkB;AACnB,WAAKC,QAAL,CAAc,UAAAJ,KAAK;AAAA,eAAK;AACtBC,UAAAA,MAAM,EAAE,CAACD,KAAK,CAACK;AADO,SAAL;AAAA,OAAnB;AAGA;;;6BAKO;AAAA;;AAEPC,MAAAA,eAAe,GAAG,2BAAO;AACvB,YAAMC,gBAAgB,GACpB;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,MAAI,CAACC,KAAL,CAAWC,WAAf,CADJ,CADF;AAKA,YAAMC,mBAAmB,GACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,KAAK,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;;AAME,YAAG,MAAI,CAACT,MAAR,EAAe;AACb,iBACE;AAACM,YAAAA,gBAAgB,EAAhBA;AAAD,WADF;AAEE,SAHJ,MAGQ;AACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACCG,mBADD;AAGD;AACF,OApBL;;AAwBA,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKF,KAAL,CAAWG,KAAhB,CADF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAuB,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI,SAAvC;AAAkD,QAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CALF,EASA;AAAK,QAAA,OAAO,EAAEV,iBAAd;AAAiC,QAAA,SAAS,EAAC,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKI,eAFL,CATA,EAgBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWK,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,YAA/B;AAA4C,QAAA,SAAS,EAAC,cAAtD;AAAqE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,UAAvF;AAAmG,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,yBAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF,CAhBF,CADF;AA2BD;;;;EAzEwClB,S;;SAAtBE,a","sourcesContent":["import React, { Component } from 'react';\nimport Avatar from 'react-avatar';\n\nexport default class TargetDetails extends Component {\n    constructor() {\n      super();\n      this.state = {\n        showMe : false\n      }\n      this.toggleDescription = this.toggleDescription.bind(this);\n\n    }\n\n\n   toggleDescription() {\n    this.setState(state => ({ \n      showMe: !state.isToggleOn\n    }))\n   }\n\n    \n\n\n  render() {\n\n    DescriptionItem = () =>  {\n      const descriptionSolid = (\n        <div className=\"Description\"> \n            <p>{this.props.description}</p>\n            </div>\n      );\n      const descriptionEditable = (\n        <div>\n          <input value=\"sample input\" />\n        </div>\n      );\n      \n        if(this.showMe){\n          return(\n            {descriptionSolid}\n          )}else{\n            <div> \n            {descriptionEditable}\n            </div>\n          }\n        }\n  \n    \n\n    return (\n      <div className=\"TargetDetails\">  \n        <div> \n          <h3>{this.props.title}</h3>\n        </div>\n\n        <div className=\"Thumbnail\"> \n        <img className=\"Card\"  src={this.props.thumbnail} alt=\"\"/> \n        </div>\n       \n      <div onClick={toggleDescription} className=\"Description\"> \n          {/* <p>{this.props.description}</p> */}\n          {DescriptionItem}\n          </div>\n \n\n\n        <div className=\"input-field col s12\">\n          <form onSubmit={this.props.handleCommentSubmit}>\n          <i className=\"material-icons prefix\">textsms</i>\n          <input type=\"text\" placeholder=\"Comment...\" className=\"autocomplete\" value={this.props.newComment} onChange={this.props.handleCommentSubmitChange}/>\n          </form>\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}