{"ast":null,"code":"import _classCallCheck from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Adam/Genepull Template/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Adam/Genepull Template/src/pages/profile/Home/example.js\";\nimport React, { PropTypes } from 'react'; //Source for this code\n// https://codereview.stackexchange.com/questions/176495/react-component-click-to-edit-text\n\nvar EditableField =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditableField, _React$Component);\n\n  function EditableField(props) {\n    var _this;\n\n    _classCallCheck(this, EditableField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableField).call(this, props));\n\n    _this.success = function () {\n      _this.setState({\n        submitting: false\n      });\n    };\n\n    _this.failure = function () {\n      _this.setState({\n        submitting: false,\n        error: true\n      });\n    };\n\n    _this.handleClickOutside = function (e) {\n      if (_this.wrapperRef && !_this.wrapperRef.contains(e.target)) {\n        _this.toggleEditing();\n      }\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        draftText: _this.state.text\n      });\n\n      _this.toggleEditing();\n    };\n\n    _this.toggleEditing = function () {\n      // so we can close on outside click\n      if (_this.state.editing) {\n        document.removeEventListener('mousedown', _this.handleClickOutside);\n      } else {\n        document.addEventListener('mousedown', _this.handleClickOutside);\n      }\n\n      _this.setState({\n        editing: !_this.state.editing\n      });\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        draftText: e.target.value\n      });\n    };\n\n    _this.triggerSubmit = function () {\n      _this.setState({\n        text: _this.state.draftText,\n        submitting: true\n      }); // submit\n      // this.props.submitCallback(this.state.draftText, this.success, this.failure);\n\n    };\n\n    _this.handleKeyDown = function (e) {\n      var enter_key = 13;\n      var escape_key = 27;\n\n      if (e.keyCode == enter_key) {\n        _this.toggleEditing();\n\n        _this.triggerSubmit();\n      } else if (e.keyCode == escape_key) {\n        _this.toggleEditing();\n      }\n    };\n\n    _this.state = {\n      editing: false,\n      submitting: false,\n      draftText: _this.props.text,\n      text: _this.props.text,\n      error: false // this.handleCancel = this.handleCancel.bind(this);\n      // this.handleClickOutside = this.handleClickOutside.bind(this);\n\n    };\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.toggleEditing = this.toggleEditing.bind(this);\n    // this.handleChange = this.handleChange.bind(this);\n\n    _this.triggerSubmit = _this.triggerSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.success = _this.success;\n    _this.failure = _this.failure;\n    return _this;\n  }\n\n  _createClass(EditableField, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var controlLinks;\n      var editing;\n      var textOrInput;\n      var error;\n\n      if (this.state.error) {\n        error = React.createElement(\"span\", {\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"error!\");\n      }\n\n      if (this.state.editing) {\n        textOrInput = React.createElement(\"input\", {\n          autoFocus: true,\n          type: \"text\",\n          id: this.props.id,\n          onChange: this.handleChange,\n          onKeyDown: this.handleKeyDown,\n          value: this.state.draftText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        });\n        controlLinks = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"edit-link blue-link\",\n          onClick: this.handleCancel,\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"CANCEL\"));\n        editing = 'editing';\n      } else {\n        textOrInput = React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, this.state.text);\n        controlLinks = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"edit-link blue-link\",\n          onClick: this.toggleEditing,\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"EDIT\"));\n        editing = '';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"\".concat(this.props.className, \" \").concat(editing, \" editable-field\"),\n        ref: function ref(node) {\n          _this2.wrapperRef = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, textOrInput, error, controlLinks);\n    }\n  }]);\n\n  return EditableField;\n}(React.Component);\n\nexport { EditableField as default };","map":{"version":3,"sources":["/Users/Adam/Genepull Template/src/pages/profile/Home/example.js"],"names":["React","PropTypes","EditableField","props","success","setState","submitting","failure","error","handleClickOutside","e","wrapperRef","contains","target","toggleEditing","handleCancel","draftText","state","text","editing","document","removeEventListener","addEventListener","handleChange","value","triggerSubmit","handleKeyDown","enter_key","escape_key","keyCode","bind","controlLinks","textOrInput","id","className","node","Component"],"mappings":"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","sourcesContent":["import React, {PropTypes} from 'react';\n\n//Source for this code\n// https://codereview.stackexchange.com/questions/176495/react-component-click-to-edit-text\n\nexport default class EditableField extends React.Component {\n  propTypes: {\n    className: React.PropTypes.string,\n    text: React.PropTypes.string,\n    fieldType: React.PropTypes.string,\n    submitCallback: React.PropTypes.func,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editing: false,\n      submitting: false,\n      draftText: this.props.text,\n      text: this.props.text,\n      error: false,\n    }\n\n    // this.handleCancel = this.handleCancel.bind(this);\n    // this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    // this.toggleEditing = this.toggleEditing.bind(this);\n    // this.handleChange = this.handleChange.bind(this);\n    this.triggerSubmit = this.triggerSubmit.bind(this);\n    this.success = this.success;\n    this.failure = this.failure;\n  }\n\n    success = () => {\n        this.setState({submitting: false});\n    }\n\n//   success() {\n//     this.setState({submitting: false});\n//   }\n\n\nfailure = () => {\n    this.setState({\n        submitting: false,\n        error: true\n      });\n}\n\n\nhandleClickOutside = (e) => {\n    if (this.wrapperRef && !this.wrapperRef.contains(e.target)) {\n        this.toggleEditing();\n      }\n}\n  \nhandleCancel = () => {\n    this.setState({draftText: this.state.text});\n    this.toggleEditing();\n}\n  \ntoggleEditing = () => {\n     // so we can close on outside click\n     if (this.state.editing) {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n      } else {\n        document.addEventListener('mousedown', this.handleClickOutside);\n      }\n  \n      this.setState({editing: !this.state.editing});\n}\n\nhandleChange = (e) => {\n    this.setState({draftText: e.target.value});\n\n}\n\n  // actually submit the request etc.\ntriggerSubmit = () => {\n    this.setState({\n        text: this.state.draftText,\n        submitting: true,\n      });\n      // submit\n      // this.props.submitCallback(this.state.draftText, this.success, this.failure);\n}\n  \n\n  // check for enter or cancel\nhandleKeyDown = (e) => {\n    const enter_key = 13;\n    const escape_key = 27;\n\n    if (e.keyCode == enter_key) {\n      this.toggleEditing();\n      this.triggerSubmit();\n    } else if (e.keyCode == escape_key) {\n      this.toggleEditing();\n    }\n}\n\n\n  render() {\n    let controlLinks;\n    let editing;\n    let textOrInput;\n    let error;\n\n    if (this.state.error) {\n      error = <span className=\"error\">error!</span>\n    }\n\n    \n\n    if (this.state.editing) {\n      textOrInput = <input\n                      autoFocus\n                      type=\"text\"\n                      id={this.props.id}\n                      onChange={this.handleChange}\n                      onKeyDown={this.handleKeyDown}\n                      value={this.state.draftText}\n                    />\n\n      controlLinks = (\n        <div>\n          <a className=\"edit-link blue-link\" onClick={this.handleCancel} href=\"#\">CANCEL</a>\n        </div>\n      )\n\n      editing = 'editing';\n    } else {\n      textOrInput = <span className=\"text\">{this.state.text}</span>\n      controlLinks = <div><a className=\"edit-link blue-link\" onClick={this.toggleEditing} href=\"#\">EDIT</a></div>\n      editing = '';\n    }\n\n    return (\n\n      <div\n        className={`${this.props.className} ${editing} editable-field`}\n        ref={(node) => { this.wrapperRef = node; }}\n      >\n        {textOrInput}\n        {error}\n        {controlLinks}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}